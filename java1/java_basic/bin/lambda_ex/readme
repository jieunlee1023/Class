람다식 (Lambda expression)

함수형 프로그래밍과 람다식

자바 객체 지향 프로그래밍 : 
기능을 수행하기 위해서 객체를 만들고 그 객체 내부에 멤버 변수를 선언해서 수행하는 메서드를 구현한다.

자바 8 부터는 함수형 프로그래밍 방식을 지원하고 이를 람다식이라고 한다.

함수의 구현과 호출만으로 프로그래밍이 수행되는 방식을 함수형 프로그래밍이라고 한다.


함수형 프로그래밍 (Functional Programming : FP )

* 함수형 프로그래밍은 순수함수 를 구현하고 호출함으로써 
외부자료에 부수적인 영향을 주지 않도록 구현하는 방식입니다.
* 순수 함수(pure function) 란 매개변수만을 사용하여 만드는 함수라고 보면 된다.
(=함수의 원론적인 기능만! 추가적인 기능이 없는 것 / 멤버변수를 사용하지 않는다)

즉, 함수 내부에서 함수 외부에 있는 변수에 영향을 주지 않습니다.

*** 람다식 문법 *** 제공 하고 있다!
람다식 : 간결성이 높다 / 순수 함수를 쓰기 위해서
익명 함수 만들기
매개 변수와 화살표 함수를 이용해서 실행문을 만들어 준다.
() -> {실행문;}

>>> 식을 선언하는 방법  <<<<
int add (int x, int y) {
	return x + y;
}

람다식으로 표현하면 ?
(int x, int y) -> {return x + y; }

* 매개 변수가 없는 함수
void print(){
 System.out.println("안녕");
 }
 
 () -> { System.out.println("안녕"); }

* 매개변수가 하나인 경우 자료형과 괄호 생략 가능하다
void print2 (String str) {
	System.out.println(str);
}

(String str) -> { System.out.println(str); }

str -> System.out.println(str);

















