업 캐스팅이란 ?
다운 캐스팅이란 ?
ch13 MainTest5



ch 16 / ch 15
* 템플릿 메서드 패턴
: 추상 메서드나 구현 된 메서드를 활용하여 코드의 흐름(시나리오)을 정의하는 메서드
 (자동차 - 실행의 흐름 O : 시동을 켠다 /~~~~~/ 시동을 끈다)
- fianl로 선언하여 하위 클래스에서 재정의 할 수 없게 함
- 프레임워크에서 많이 사용되는 설계 패턴
(프레임워크 ? Fram+ Work (* 프레임워크를 이용하는 것 : 라이프사이클)
틀(흐름)을 만들어두고, 실행의 흐름에 따라 수정&추가하며 만들어 가는 코드의 묶음
ex ) 모양자 , 상자안에 들어간 구슬등으로 생각)

- 추상 클래스로 선언된 상위 클래스에서
템플릿 메서드를 활용해어 전체적인 흐름을 정의하고
하위 클래스에서 다르게 구현되어야 하는 부분은
추상 메서드로 선언하여 하위 클래스에서 구현 하도록 함

* final 예약어
final 변수 : 값이 변경될 수 없는 상수
final 메서드 : 하위 클래스에서 재정의 할 수 없는 메서드
final 클래스 : 상속할 수 없는 클래스

* 인터페이스 (interface)
모든 메서드가 '추상' 메서드로 선언됨! public abstract
모든 변수는 '상수'로 선언됨 public static final
인터페이스 안에서는 생략되어있는 것임!
인터페이스 안에서는 기본적으로 new 불가

- 기능 중심 설계 

interface 이름 {

}
Tip : int Size ; // <-- width, heigh  class가 적절





















